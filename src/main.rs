extern crate noun;
extern crate diesel;

use std::process;

use noun::*;
use models::*;
use diesel::prelude::*;

fn main() {
    use noun::schema::place::dsl::*;

    // Get our connection to the database
    let connection = establish_connection();

    // Insert a new place
    let result = add_place(&connection,
              None,
              None,
              None,
              Some("Test Place"),
              Some(vec!["Foo", "Bar", "Baz"]),
              "A cool place");

    // Check for any errors generated by inserting the new row
    if let Err(e) = result {
        println!("Error inserting place: {}", e);
        process::exit(1);
    }
    
    // Query the place table
    let results = place.load::<Place>(&connection)
        .expect("Error loading places");

    println!("Displaying {} places", results.len());
    for p in results {
        println!("{:#?}\n\n", p);
    }
}
